import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from google.colab import files

# CSVファイルをアップロード
uploaded = files.upload()
file_name = next(iter(uploaded))

# CSVファイルの読み込み
data = pd.read_csv(file_name)
print(data.head())

# 時間と信号データを抽出
time_data = data.iloc[:, 0].values   # 1列目が時間データ
signal_data = data.iloc[:, 1].values # 2列目が信号データ

# 波形をプロット
plt.figure(figsize=(10, 4))
plt.plot(time_data, signal_data, label="Signal")
plt.title("Signal Waveform")
plt.xlabel("Time [sec]")
plt.ylabel("Signal Amplitude")
plt.grid()
plt.legend()
plt.show()

# FFTの計算
N = len(signal_data)
fs = 1 / np.mean(np.diff(time_data))  # サンプリング周波数の推定
freqs = np.fft.fftfreq(N, 1/fs)
fft_values = np.fft.fft(signal_data) * 2 / N
power_spectrum = np.abs(fft_values) ** 2
Pow_dB = 10 * np.log10(power_spectrum[:N//2])
freqs_half = freqs[:N//2]

# SNDR, ENOB, SFDR の計算
signal_index = np.argmax(power_spectrum[1:]) + 1
Signal = power_spectrum[signal_index]
Noise = np.sum(power_spectrum[1:]) - Signal
SNDR = 10 * np.log10(Signal / Noise)
ENOB = (SNDR - 1.76) / 6.02
spurious = [np.max(Pow_dB[(signal_index * i) - 2 : signal_index * i + 2]) for i in range(2, 5)]
SFDR = Pow_dB[signal_index] - np.max(spurious)

print(f"SNDR = {SNDR:.2f} dB")
print(f"ENOB = {ENOB:.2f} bit")
print(f"SFDR = {SFDR:.2f} dB")

# グラフ描画
fig, axs = plt.subplots(1, 2, figsize=(10, 5))
axs[0].plot(time_data, signal_data, marker=".", markersize=5, label="Signal")
axs[0].set_title("Sorted Wave")
axs[0].set_xlabel("Time [sec]")
axs[0].set_ylabel("Code")
axs[0].grid()
axs[0].set_ylim(0, 1.2)
axs[0].legend()

axs[1].plot(freqs_half, Pow_dB, label="Power Spectrum", color="red")
axs[1].set_title("Power Spectrum")
axs[1].set_xlabel("f/fs")
axs[1].set_ylabel("Power [dB]")
axs[1].grid()
axs[1].legend()

plt.tight_layout()
plt.show()
