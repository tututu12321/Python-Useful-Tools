from PIL import Image, ImageFilter
import numpy as np
import matplotlib.pyplot as plt
from google.colab import files
import cv2
from scipy.fftpack import fft2, fftshift, ifft2

# --- ファイルアップロード ---
def upload_image():
    uploaded = files.upload()  # Google Colabで画像をアップロード
    image_path = list(uploaded.keys())[0]
    print(f"Uploaded file: {image_path}")
    return image_path

# --- 画像加工 (Pillow) ---
def image_processing(image_path):
    img = Image.open(image_path)

    # リサイズ
    resized_img = img.resize((256, 256))

    # グレースケール変換
    grayscale_img = resized_img.convert("L")

    # エッジ検出
    edge_img = grayscale_img.filter(ImageFilter.FIND_EDGES)

    # プロット
    plt.figure(figsize=(12, 6))
    plt.subplot(1, 3, 1)
    plt.imshow(resized_img)
    plt.title("Resized Image")
    plt.axis("off")

    plt.subplot(1, 3, 2)
    plt.imshow(grayscale_img, cmap="gray")
    plt.title("Grayscale Image")
    plt.axis("off")

    plt.subplot(1, 3, 3)
    plt.imshow(edge_img, cmap="gray")
    plt.title("Edge Detection")
    plt.axis("off")

    plt.tight_layout()
    plt.show()

    # 加工後の画像を返す
    return edge_img

# --- FFT解析 ---
def fft_analysis(image):
    # OpenCV形式に変換
    img_array = np.array(image)

    # FFT
    fft_result = fft2(img_array)  # 2D FFT
    fft_shifted = fftshift(fft_result)  # 中心をシフト
    magnitude_spectrum = np.log(np.abs(fft_shifted) + 1)

    # プロット
    plt.figure(figsize=(12, 6))
    plt.subplot(1, 2, 1)
    plt.imshow(img_array, cmap="gray")
    plt.title("Processed Image")
    plt.axis("off")

    plt.subplot(1, 2, 2)
    plt.imshow(magnitude_spectrum, cmap="gray")
    plt.title("FFT Magnitude Spectrum")
    plt.axis("off")

    plt.tight_layout()
    plt.show()

# --- 実行 ---
image_path = upload_image()
processed_image = image_processing(image_path)
fft_analysis(processed_image)
