# アリストテレスの命題論をプリント関数で表示

def print_section(title):
    """ セクションタイトルを装飾して表示 """
    print("\n" + "="*50)
    print(f"  {title}")
    print("="*50)

# 1. 命題とは？
print_section("1. 命題とは？")
print("命題（proposition）とは、真または偽を判定できる文のことです。")
print("例：")
print("「すべての人間は死すべきものである。」（真）")
print("「すべての猫は鳥である。」（偽）")

# 2. 命題の分類（A, E, I, O）
print_section("2. 命題の分類（A, E, I, O）")
propositions = {
    "A": "すべてのSはPである（全称肯定命題）",
    "E": "すべてのSはPでない（全称否定命題）",
    "I": "あるSはPである（特称肯定命題）",
    "O": "あるSはPでない（特称否定命題）"
}
for key, value in propositions.items():
    print(f"{key}: {value}")

# 3. 命題の変換（真偽・逆・裏・対偶）
print_section("3. 命題の変換（真偽・逆・裏・対偶）")
print("(1) 真偽: 命題には真（True）または偽（False）がある。")
print("例：「すべての人間は死すべきである」は真。")

print("\n(2) 逆（Contraposition）: 主語と述語を入れ替える")
print("例：「すべての猫は哺乳類である」→「すべての哺乳類は猫である」")

print("\n(3) 裏（Conversion）: 「すべてのSはPである」→「あるSはPである」")
print("例：「すべての猫は哺乳類である」→「ある哺乳類は猫である」")

print("\n(4) 対偶（Contraposition）: 「すべてのSはPである」→「すべての非Pは非Sである」")
print("例：「すべての猫は哺乳類である」→「すべての非哺乳類は非猫である」")

# 4. 三段論法（Syllogism）
print_section("4. 三段論法（Syllogism）")

print("(1) 三段論法とは？ 2つの前提から結論を導く論理形式")
print("例：")
print("  大前提: すべての人間は死すべきものである。")
print("  小前提: ソクラテスは人間である。")
print("  結論  : ソクラテスは死すべきものである。")

print("\n(2) 三段論法の一般形式")
print("  すべての M は P である （大前提）")
print("  すべての S は M である （小前提）")
print("  ∴ すべての S は P である （結論）")

print("\n(3) 三段論法のバリエーション")
syllogisms = [
    ("A-A-A", "すべての人は動物である。すべての動物は生き物である。→ すべての人は生き物である。"),
    ("A-E-E", "すべての鳥は動物である。すべての動物は植物ではない。→ すべての鳥は植物ではない。"),
    ("A-I-I", "すべての学生は学ぶ。ある人は学生である。→ ある人は学ぶ。")
]
for form, example in syllogisms:
    print(f"{form}: {example}")

# 5. まとめ
print_section("5. まとめ")
summary = [
    "命題（proposition）とは、真または偽を判定できる文。",
    "命題の種類（A, E, I, O）は、全称・特称、肯定・否定で分類。",
    "命題の変換（逆・裏・対偶）を利用すると、新たな推論が可能。",
    "三段論法（Syllogism）を用いると、前提から結論を導くことができる。",
    "アリストテレスの論理学は、現代の数学・コンピュータサイエンスの基礎！"
]
for s in summary:
    print(s)
